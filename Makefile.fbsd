.PHONY: ds-setup lib389

OPREFIX = /opt/dirsrv
SILENT ?= 
# --enable-silent-rules
DEVDIR ?= $(shell pwd)
BUILDDIR ?= ~/build
LIB389_VERS ?= $(shell cat ./lib389/VERSION | head -n 1)
PYTHON ?= /usr/local/bin/python2
MAKE ?= make
PKG_CONFIG_PATH ?= /usr/local/lib/pkgconfig:/opt/dirsrv/lib/pkgconfig

ASAN ?= true

# -Wlogical-op  -Wduplicated-cond  -Wshift-overflow=2  -Wnull-dereference -Wstrict-prototypes

# Removed the --with-systemd flag to work in containers!

ds_cflags = "-O2 -Wall -Wextra -Wunused -Wno-unused-parameter -Wno-sign-compare -Wstrict-overflow -fno-strict-aliasing -Wunused-but-set-variable"
# ds_confflags = --enable-debug --with-svrcore=$(OPREFIX) --with-nunc-stans=$(OPREFIX) --enable-nunc-stans  --prefix=$(OPREFIX) --enable-gcc-security --with-openldap --enable-auto-dn-suffix --enable-autobind $(SILENT)
ds_confflags = --enable-debug --enable-cmocka --with-svrcore=$(OPREFIX) --prefix=$(OPREFIX) --enable-gcc-security --with-openldap --with-openldap=/usr/local --with-db --with-db-inc=/usr/local/include/db5/ --with-db-lib=/usr/local/lib/db5/ --with-sasl --with-sasl-inc=/usr/local/include/sasl/ --with-sasl-lib=/usr/local/lib/sasl2/ --with-netsnmp=/usr/local --with-kerberos=/usr/local/ $(SILENT)

svrcore_cflags = --prefix=$(OPREFIX) --enable-debug --with-systemd $(SILENT)

all:
	echo "make ds|nunc-stans|lib389|ds-setup"

builddeps:
	sudo pkg install autotools git openldap-client db5 cyrus-sasl pkgconf nspr nss net-snmp gmake python34 libevent2 doxygen cmocka
	sudo python3.4 -m ensurepip
	sudo pip3.4 install six pyasn1 pyasn1-modules pytest python-dateutil

clean: ds-clean svrcore-clean

pyldap:
	cd $(DEVDIR)/pyldap/ && $(PYTHON) setup.py build
	cd $(DEVDIR)/pyldap/ && sudo $(PYTHON) setup.py install --force --root=/

lib389: pyldap
	$(MAKE) -C $(DEVDIR)/lib389/ build PYTHON=$(PYTHON)
	sudo $(MAKE) -C $(DEVDIR)/lib389/ install PYTHON=$(PYTHON)

svrcore-configure:
	cd $(DEVDIR)/svrcore/ && autoreconf -fiv
	mkdir -p $(BUILDDIR)/svrcore
	cd $(BUILDDIR)/svrcore && $(DEVDIR)/svrcore/configure $(svrcore_cflags)

svrcore: svrcore-configure
	$(MAKE) -C $(BUILDDIR)/svrcore
	sudo $(MAKE) -C $(BUILDDIR)/svrcore install

svrcore-clean:
	$(MAKE) -C $(BUILDDIR)/svrcore clean; true

ds-configure: 
	cd $(DEVDIR)/ds && autoreconf -fiv
	mkdir -p $(BUILDDIR)/ds/
	cd $(BUILDDIR)/ds/ && PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) CFLAGS=$(ds_cflags) $(DEVDIR)/ds/configure $(ds_confflags)

ds-configure-test:
	echo PKG_CONFIG_PATH='$(PKG_CONFIG_PATH)' CFLAGS='$(ds_cflags)' $(DEVDIR)/ds/configure $(ds_confflags)

ds-rust-clean:
	$(MAKE) -C $(BUILDDIR)/ds_rust clean; true

ds-rust-configure:
	cd $(DEVDIR)/ds_rust && autoreconf -fiv
	mkdir -p $(BUILDDIR)/ds_rust
	cd $(BUILDDIR)/ds_rust/ &&  $(DEVDIR)/ds_rust/configure --prefix=$(OPREFIX) $(SILENT)

ds-rust: ds-rust-configure
	$(MAKE) -C $(BUILDDIR)/ds_rust
	sudo $(MAKE) -C $(BUILDDIR)/ds_rust install

# Self contained freebsd build, due to the (temporary) differences.
ds: lib389 svrcore ds-configure
	$(MAKE) -C $(BUILDDIR)/ds
	sudo $(MAKE) -C $(BUILDDIR)/ds install
	sudo mkdir -p $(OPREFIX)/etc/sysconfig/

ds-clean:
	$(MAKE) -C $(BUILDDIR)/ds clean; true

ds-setup: lib389
	sudo python /usr/sbin/dsadm instance example > /tmp/ds-setup.inf
	sudo python /usr/sbin/dsadm -v instance create -f /tmp/ds-setup.inf --IsolemnlyswearthatIamuptonogood --containerised

ds-setup-py3: lib389
	sudo python3 /usr/sbin/dsadm instance example > /tmp/ds-setup.inf
	sudo python3 /usr/sbin/dsadm -v instance create -f /tmp/ds-setup.inf --IsolemnlyswearthatIamuptonogood --containerised

